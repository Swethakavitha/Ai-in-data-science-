# Tic-Tac-Toe Game Implementation

# Function to print the Tic-Tac-Toe board
def print_board(board):
    print("\n")
    for row in board:
        print(" | ".join(row))
        print("-" * 5)

# Function to check if a player has won
def check_winner(board, player):
    # Check rows, columns and diagonals
    for i in range(3):
        if all([cell == player for cell in board[i]]):  # Check row
            return True
        if all([board[j][i] == player for j in range(3)]):  # Check column
            return True
    if board[0][0] == player and board[1][1] == player and board[2][2] == player:  # Check diagonal
        return True
    if board[0][2] == player and board[1][1] == player and board[2][0] == player:  # Check reverse diagonal
        return True
    return False

# Function to check if the board is full (no more moves)
def board_full(board):
    return all(cell != " " for row in board for cell in row)

# Function to play Tic-Tac-Toe
def tic_tac_toe():
    board = [[" " for _ in range(3)] for _ in range(3)]  # 3x3 grid initialized with empty spaces
    current_player = "X"  # Player X starts
    game_over = False

    while not game_over:
        print_board(board)
        print(f"Player {current_player}'s turn")

        # Ask for the player's move
        move = input(f"Enter row and column (1-3) separated by space: ").split()
        row, col = int(move[0]) - 1, int(move[1]) - 1

        # Validate the move
        if row < 0 or row >= 3 or col < 0 or col >= 3 or board[row][col] != " ":
            print("Invalid move. Try again.")
            continue

        # Make the move
        board[row][col] = current_player

        # Check if the current player has won
        if check_winner(board, current_player):
            print_board(board)
            print(f"Player {current_player} wins!")
            game_over = True
        elif board_full(board):
            # If board is full and no winner, it's a tie
            print_board(board)
            print("It's a tie!")
            game_over = True
        else:
            # Switch players
            current_player = "O" if current_player == "X" else "X"

# Start the game
if __name__ == "__main__":
    tic_tac_toe()
